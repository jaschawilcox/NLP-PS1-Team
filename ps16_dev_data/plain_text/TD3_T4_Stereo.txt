{SL} OK EXCELLENT UM LET'S SEE THEN THE NEXT SECTION IS VERY SIMILAR TO WHAT WE JUST DID EXCEPT THIS TIME WE'LL BE TALKING ABOUT SOME BASIC MATH AND PROGRAMMING CONCEPTS SO FOR THESE QUESTIONS ASSUME THAT I DON'T KNOW ANYTHING ABOUT THESE MATHEMATICAL THEORIES UM PLEASE EXPLAIN THE QUESTION AND ANSWER IT KIND OF LIKE YOU'RE TUTORING ME MHM AND AGAIN IF YOU'RE NOT SURE WHAT THE ANSWER IS PLEASE TRY TO GUESS AND IF YOU CAN'T THINK OF ANY ANSWER YOU CAN TELL ME THAT YOU WANT TO SKIP THE QUESTION ALRIGHT OK {BR} GREAT THEN WE ARE GOING TO START OFF JUST BY CALIBRATING THE EYE TRACKING GLASSES AGAIN {SL} ON THE LEFT ARE EXPRESSIONS AND ON THE RIGHT ARE SETS {SL} ON THE LEFT WHAT DO THE U UPSIDE-DOWN U AND X SYMBOLS MEAN {SL} UM THE U IS UNION SO THE COMBINED R- UM THE SET THAT'S THE RESULTANT OF COMBINING TWO SETS SO A UNION B WOULD BE ONE TWO THREE FOUR FIVE SIX SEVEN EIGHT IN THAT ORDER {SL} UM {SL} B INTERSECTION ER UPSIDE-DOWN U IS INTERSECTION SO ANYTHING ANY UM THE RESULTANT SET WHERE THE NEW SET HAS ELEMENTS THAT ARE SHARED BETWEEN TWO SETS SO B INTERSECTION C WOULD BE {SL} SIX SEVEN EIGHT {SL} UM AND A INTERSECTION C WOULD BE AN THE NULL SET BE AN EMPTY SET NOTH- SINCE NOTHING'S SHARED {SL} AND I CAN'T REMEMBER WHAT THE X MEANS {LG} OK THAT'S ALRIGHT {SL} WHAT IS THE ROOT NODE {SL} UM {SL} DO YOU WANT A DEFINITION OR WANT ME TO IDENTIFY IT UM BOTH OK UH THE ROOT NODE IS THE TOP-MOST PARENT {SL} UM OR THE EXACT MIDDLE OF THE UM {SL} BINARY TREE WHICH IS WHICH IS WHAT THIS IS THE ROOT NODE IN THIS CASE IS FIFTY OK WHAT IS THE PARENT NODE OF NINETEEN UH THE PARENT NODE OF NINETEEN IS TWENTY THREE {SL} OK WHAT ARE THE CHILD NODES OF SEVENTY TWO {SL} UH FIFTY FOUR ER FIFTY FOUR SIXTY SEVEN AND SEVENTY SIX {SL} OK AND WHAT ARE THE SIBLING NODES OF TWELVE {SL} UM {SL} TWENTY THREE {SL} OK {SL} WHAT SPECIAL TYPE OF FUNCTION IS THIS {BR} {SL} UH THIS IS A RECURSIVE FUNCTION UM A FUNCTION THAT CALLS ITSELF WITHIN ITSELF {SL} UM {SL} HAS THE POTENTIAL TO LOOP TO INFINITY UNLESS THERE IS SOME SORT OF BREAK IN THERE SUCH AS WHAT YOU HAVE THERE IF Y EQUALS EQUALS ZERO {SL} UM AND THIS FUNCTION I WOULD ASSUME RETURNS THE GREATEST COMMON DENOM- DENOMINATOR BETWEEN TWO I- TWO INTEGERS {SL} OK GREAT AND WHAT DOES THIS FUNCTION DO {LG} UM RETURNS THE GREATEST COMMON DENOMINATOR BETWEEN TWO INTEGERS X AND Y OK GREAT {SL} WHAT DOES THIS FUNCTION DO {SL} THIS IS A THIS IS A SORT {SL} UM THIS SORTS A LIST A UM SO THAT THE VALUES ARE IN ORDER {SL} OK AND WHAT IS THE FORMAL NAME FOR THIS TYPE OF FUNCTION OH GOD {SL} I ALWAYS GOOF UP BUBBLE AND SELECTION SORT IT'S ONE OF THOSE {SL} THINK IT'S A SELECTION SORT {SL} BUT I'M I COULD BE WRONG OK THAT'S ALRIGHT {SL} OH GOD {LG} OK EXPLAIN EACH OF THE SYMBOLS ON THE LEFT {SL} {BR} {SL} UM CAN I SKIP THIS QUESTION SURE SURE UM USING THE EXPRESSIONS ON THE RIGHT CREATE AT LEAST ONE EXAMPLE AND YOU CAN DEFINE THE VARIABLES HOWEVER YOU WANT CAN I SKIP THAT QUESTION AS WELL YEP I CAN'T I CAN'T REMEMBER WHAT ANY OF THOSE SYMBOLS MEAN THAT'S OK THAT'S TOTALLY FINE {SL} ON A WEBSITE THIS WOULD PRODUCE WHAT DOES EXAMPLE A B AND C LOOK LIKE {SL} UM {SL} A WOULD TAKE THE UM {SL} A IS IN EXAMPLE A IS IN A HEADER TAG ER A HEADER ONE TAG SO IT'D BE IT'D HAVE THE FONT ARIAL IT'D BE PINK UM ER ITS BACKGROUND WOULD BE PINK AND ITS COLOR WOULD BE RED UM HEADER TWO ITS COLOR WOULD BE BLUE AND IT WOULDN'T HAVE A BACKGROUND COLOR ER IT WOULD HAVE THE DEFAULT BACKGROUND COLOR {SL} UM AND IT WOULD BE CENTERED AND C WOULD TAKE ON THE UM {SL} THE UM PROPERTY IT WOULD HAVE A BACKGROUND COLOR OF YELLOW AND IT WOULD BE GREEN UH THE TEXT WOULD BE GREEN {SL} OK GREAT {SL} DESCRIBE TO ME USING THE PICTURE WHAT A LOOP IS {SL} UM {SL} IN A FINITE STATE MACHINE {SL} CAN'T REMEMBER {SL} CAN I SKIP THIS ONE SURE NO PROBLEM {SL} UM HOW MANY LOOPS ARE THERE IN THIS PICTURE {SL} ONE {SL} I BELIEVE OK {SL} AND WHAT WOULD CALL THE ZERO VERTEX {SL} NOT SURE IF YOU C- CONSIDER THAT A TERMINATOR OR NOT EVEN PART OF THE MACHINE SINCE IT'S NOT CONN- SINCE IT'S NOT CONNECTED TO ANYTHING {SL} OK GREAT {SL} DESCRIBE TO ME WHAT KIND OF INFORMATION IS HERE {SL} UH THESE ARE NUTRITION FACTS FOR UM A BREAKFAST MENU {SL} UM SO SOME SORT OF RESTAURANT THAT HAPPENS TO HAVE BELGIAN WAFFLES AND STRAWBERRY BELGIAN WAFFLES UM EACH ELEMENT WOULD HAVE A NAME A PRICE A DESCRIPTION AND A CALORIE COUNT SINCE WELCOME TO TWO THOUSAND FOURTEEN {SL} OK WHAT TYPE OF CODING IS THIS UM {SL} I MEAN I'D ARGUE AGAINST CALLING IT CODING BUT IT'S UM IT'S H T M L NO IT'S X M L {SL} X M L {SL} OK AND WHAT IS A BENEFIT OF CODING INFORMATION THIS WAY {SL} UM {SL} GIVES UM {SL} GIVES A READABLE STRUCTURE TO THE UM THE INFORMATION YOU'RE MAINTAINING {SL} IT'S ALSO GREAT IF YOU REALLY LIKE BLOATED FILE TYPES {SL} OK {SL} WHAT TYPE OF GRAPH IS THIS {SL} WHAT TYPE OF GRAPH MHM I DON'T REMEMBER THE T- THE DIFFERENT TYPES OF GRAPHS {SL} OK THAT'S ALRIGHT WHAT IS THE SHORTEST PATH FROM SEVEN TO TWO {SL} UM {SL} IT'D BE UH SEVEN TO EIGHT TO SIX TO TWO {SL} GREAT WHAT IS A CYCLE ALSO CALLED A ROUTE OR A TOUR {SL} UM {SL} PRETTY SURE A CYCLE IS WHEN {SL} WELL UM WHEN THE BEST PATH GET- ER WHEN UM {SL} THERE'S A PATH THAT EXISTS THAT CAN TAKE YOU BACK TO YOURSELF {SL} SO SEVEN TO EIGHT TO SIX TO SEVEN {SL} OK HOW MANY CYCLES ARE IN THIS GRAPH {SL} HM {SL} ONE TWO {SL} THINK ONLY TWO {SL} YEAH {SL} NO WAIT THREE {SL} THREE {SL} OK GREAT {SL} THIS IS A LIST OF SOME BIG-O NOTATIONS FOR ALGORITHM COMPLEXITY SO GIVING NAMES AND EXAMPLES WHERE YOU CAN DESCRIBE TO ME THE DIFFERENCES BETWEEN THE DIFFERENT COMPLEXITIES {SL} ALRIGHT {SL} UM {SL} O ONE IS THE BEST CASE NO MATTER HOW MANY ELEMENTS YOU HAVE IN A SET IT WILL TAKE O AMOUNT OF TIME TO COMPLETE NO MATTER WHAT THE SIZE THIS IS THE BEST POSSIBLE TIME COMPLEXITY UM {SL} O N FACTORIAL IS DEPENDENT ON THE NUMBER OF UM {SL} UM ELEMENTS IN THE LIST IT'LL TAKE THAT MANY FACTORIAL TIMES HOWEVER LONG IT TAKES TO DO ONE PASS FOR TO {SL} COMPLETE THE ALGORITHM THAT'S A VERY LONG TIME N- IT'S NOT PRACTICAL FOR LARGE SETS ER OR ANY SETS AT ALL IT'S KIND OF THE WORST CASE FOR ANY ALGORITHM YOU KIND OF WANT TO AVOID THAT {SL} O N IS LINEAR SO AS THE NUMBER OF UM ITEMS IN A SET INCREASE THE NUM- UH THE TIME IT TAKES TO COMPLETE THE ALGORITHM INCREASES LINEARLY {SL} O LOG N IS {SL} UM A LOGARITHMIC PROGRESSION SO AS YOU GET INTO VERY LARGE SETS IT'LL TAKE A INDIS- IN- {SL} A UM A NOT REALLY AN INSIGNIFICANT UM DIFFERENCE OF TIME VERSUS UM {SL} SOME NUMBER WITH UM SOME UH SOME NUMBER OF THE ALGORITHM SET SMALLER THAN THE ALGORITHM WHAT {SL} AND THEN UM O N SQUARED IS UM A QUADRATIC PROGRESSION {SL} OK AND WHICH TYPE OF COMPLEXITY IS BEST AND WHY UM {SL} DEPENDS ON THE SITUATION UM IF YOU'RE IF YOU KNOW YOU'RE WORKING WITH REALLY LARGE SETS AND YOU CAN AVOID UM {SL} UM {SL} UH GETTING WRAPPED UP IN YOURSELF FOR RECURSION O LOG N IS REALLY PRACTICAL FOR FOR INCREDIBLY LARGE SETS {SL} IF YOU'RE JUST WORKING WITH A SMALLER THING UM A SMALLER SET A PRACTICAL A PERFECTLY PRACTICAL SOLUTION WOULD JUST BE AN O N SQUARED UM OR AN O N COMPLEXITY {SL} OK GREAT {SL} WHAT IS A VERTEX AND HOW MANY VERTICES ARE THERE {SL} A VERTEX IS ANY POINT WHERE TWO EDGES MEET ER WHERE AN EDGE YEAH WHERE TWO EDGES MEET SO THERE ARE EIGHT VERTICES IN THIS {SL} OK WHAT IS AN EDGE AND HOW MANY EDGES ARE THERE AN EDGE IS ANY CONNECT- ER ANY UM LINK BETWEEN TWO VERTICES THERE ARE {SL} TWELVE {SL} OK HOW LONG IS THE SHORTEST PATH FROM ONE TO SIX {SL} UM {SL} TWO {SL} ONE TO FIVE TO SIX ONE TO TWO TO SIX {SL} OK GREAT AND WHAT DOES IT MEAN TO SAY THAT THREE AND TWO ARE ADJACENT {SL} THEY HAVE AN EDGE LINKING THEM TOGETHER {SL} OK GREAT THAT WAS THE LAST QUESTION SO WE'RE JUST GOING TO CALIBRATE THE EYE TRACKING GLASSES ONE MORE TIME REAL QUICK OK AND THEN WE'RE ALMOST DONE {SL} ALRIGHT THEN YOU'RE ALL SET SO YOU CAN GO AHEAD AND TAKE THE EYE TRACKING GLASSES OFF AGAIN