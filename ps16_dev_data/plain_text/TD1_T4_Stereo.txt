WE JUST DID MHM EXCEPT THIS TIME WE'LL BE TALKING ABOUT SOME BASIC MATH AND PROGRAMMING CONCEPTS SO FOR THESE QUESTIONS JUST ASSUME THAT I DON'T KNOW ANYTHING ABOUT THESE MATHEMATICAL THEORIES SO PLEASE EXPLAIN THE QUESTION AND ANSWERING IT AS IF YOU'RE TUTORING ME OK AND AGAIN IF YOU'RE NOT SURE WHAT THE ANSWER IS PLEASE TRY TO GUESS AND IF YOU HAVE ABSOLUTELY NO IDEA JUST SAY THAT YOU'D LIKE TO SKIP AND WE CAN SKIP THE QUESTION ALRIGHT ALRIGHT AND WE ARE GOING TO DO UM JUST A QUICK CALIBRATION AGAIN SO PLEASE JUST WATCH THE DOTS {SL} THERE WE GO OK ON THE LEFT ARE EXPRESSIONS AND ON THE RIGHT ARE SETS {SL} SO ON THE LEFT WHAT DO THE U SHAPE THE UPSIDE-DOWN U AND THE X SYMBOLS MEAN UM THE U SHAPE MEANS {SL} UH IT'S BEEN A WHILE I THINK IT'S OR SO {SL} IF IT'S A OR B THAT WOULD MEAN THE SET TH- EVERYTHING THAT'S IN THE SET A OR EVERYTHING THAT'S IN THE SET B WHICH WOULD BE JUST ONE TWO THREE FOUR FIVE SIX SEVEN EIGHT {SL} UM THE UPSIDE-DOWN U SHAPE IS AND WHICH IS BASICALLY THE OVERLAP OF THOSE TWO SETS SO THE OVERLAP OF B AND C WOULD BE SIX SEVEN AND EIGHT BECAUSE THAT'S THE ONLY THING THAT B AND C HAVE IN COMMON {SL} AND THE OVERLAP OF A AND C WOULD BE NOTHING BECAUSE OUT OF ONE TWO AND THREE AND SIX SEVEN EIGHT NINE TEN ELEVEN TWELVE THERE'S NO ELEMENTS THAT ARE SHARED IN COMMON UM A TIMES D JUST MEANS BASICALLY ALL OF THE ELEMENTS IN A TIMES ALL OF THE ELEMENTS IN D WHICH WOULD BE X TWO X THREE X AND Y TWO Y THREE Y I THINK MHM {SL} OK {SL} AND GIVEN THE SETS ON THE RIGHT UM WHAT SETS WOULD BE THE ANSWERS TO THE EXPRESSIONS ON THE LEFT {SL} SO {SL} UM {SL} I'M SORRY COULD YOU REPEAT THAT YEAH THAT'S OK SO GIVEN THE SETS ON THE RIGHT WHICH SETS WOULD BE THE ANSWER TO THE EXPRESSIONS ON THE LEFT {SL} HM {SL} I'M I'M NOT SURE IF IF THAT'S A {SL} NOT REALLY SURE WHAT YOU MEAN BY THAT SORRY NO THAT'S OK THAT'S OK WE'LL SKIP IT {SL} WHAT IS THE ROOT NODE {SL} UM THE ROOT NODE WOULD BE FIFTY WHICH IS THE NODE THAT ALL OTHER NODES CONSTANTLY IF YOU KEEP GOING BACK UP WOULD GO UP TO OK WHAT IS THE PARENT NODE OF NINETEEN THE PARENT NODE OF NINETEEN IS TWENTY THREE THE NODE JUST ABOVE NINETEEN OK WHAT ARE THE CHILD NODES OF SEVENTY TWO CHILD NODES OF SEVENTY TWO ARE FIFTY FOUR AND SEVENTY SIX JUST THE NODES THAT ARE ONE BELOW SEVENTY TWO OK {SL} AND WHAT ARE THE SIBLING NODES OF TWELVE {SL} UH THE SIBLING NODES WOULD BE {SL} TWENTY THREE BECAUSE THEY'RE BOTH RELATED TO SEVENTEEN AND I'M NOT SURE IF FIFTY FI- FIFTY FOUR AND SEVENTY SIX WOULD COUNT I DON'T THINK THEY WOULD COUNT AS SIBLING NODES JUST BECAUSE THEY'RE {SL} I GUESS THEY'D BE CALLED COUSIN NODES IF THAT'S A THING {SL} OK OK {SL} WHAT SPECIAL TYPE OF FUNCTION IS THIS {SL} UM THIS IS A RECURSIVE FUNCTION {SL} WHICH MEANS THAT THE FUNCTION CALLS ITSELF SOMEWHERE INSIDE OF THE FUNCTION {SL} YEAH OK AND WHAT DOES THIS FUNCTION DO UM YOU PUT IN {SL} TWO NUMBERS X AND Y AND IF Y IS ZERO THEN IT'LL JUST RETURN X BUT IF Y IS NOT ZERO THEN IT'LL {SL} DO THE SAME THING BUT INSTEAD OF INPUTTING X AND Y IT'LL PUT IN Y AND X MODULUS Y WHICH MEANS Y AND THE DIFFERENCE BETWEEN OR RATHER THE REMAINDER IF X IS DIVIDED BY Y {SL} SO IF YOU KEEP DOING THIS I THINK IT SHOULD GIVE YOU THE GREATEST COMMON DENOMINATOR UH AND THAT'S PARTIALLY JUST BECAUSE THE NAME OF THE FUNCTION IS G C D {SL} I'M NOT SURE UM {SL} HM {SL} YEAH I THINK THIS SHOULD RETURN THE GREATEST COMMON DENOMINATOR {SL} I BELIEVE {SL} OK {SL} OK {SL} WHAT DOES THIS FUNCTION DO {SL} I BELIEVE THAT THIS IS SUPPOSED TO PUT EVERYTHING IN ORDER BUT {SL} I DON'T THINK THAT IT'LL ACTUALLY CORRECTLY PUT EVERYTHING IN ORDER IT'LL JUST GO DOWN THE LIST OF {SL} I ASSUME IT'S SUPPOSED TO TAKE A LIST OF INTS OR NUMBERS AND IF THE NUMBER IS BE- IS LOWER THAN THE NUMBER {SL} OR RATHER IF A NUMBER IS ABOVE THE NUMBER AFTER IT WAIT {SL} YEAH IF A NUMBER IS ABOVE THE NUMBER AFTER IT THEN IT JUST SWAPS THE ORDER OF THOSE TWO NUMBERS {SL} AND THEN IT KEEPS DOING THAT FOR ALL OF THE NUMBERS IN THE SET {SL} OK AND WHAT IS THE FORMAL NAME FOR THIS TYPE OF FUNCTION {SL} I THINK IT WOULD BE CALLED A SORT {SL} JUST BECAUSE IT SORTS A LIST {SL} I THINK {SL} OH I THINK THIS IS B- UM CALLED BUBBLE SORT ACTUALLY BECAUSE IT KEEPS GOING THROUGH THE LIST UNTIL {SL} EVERYTHING IS ER NOTHING HAS BEEN SWAPPED SO YEAH I BELIEVE THIS IS BUBBLE SORT AND THAT IT ACTUALLY DOES WORK {SL} OK IT'S JUST VERY SLOW {SL} OK {SL} SO EXPLAIN EACH OF THE SYMBOLS ON THE LEFT {SL} UM {SL} THE UPSIDE-DOWN A I BELIEVE STANDS FOR ALL OF {SL} MEANING FOR THE FIRST EXAMPLE ON TOP ALL OF X SUCH THAT L OF X IMPLIES P OF X OR RATHER EVERY TIME EVERY POSSIBLE THING THAT X COULD BE L OF X IMPLIES P OF X IS TRUE {SL} SAME FOR THE SECOND THING C OF X OR {SL} U OF X I BELIEVE THAT STANDS FOR UH THE SECOND SYMBOL ON THE LEFT THE BACKWARDS E I THINK IS SOME WHICH MEANS THERE BASICALLY MEANS THERE ARE SOME CONDITIONS THAT THIS'LL END UP BEING TRUE {SL} SO FOR THE THIRD ONE ON THE RIGHT THERE ARE SOME VALUES OF X WHERE R OF X AND L OF X IS TRUE UM THE THIRD THING ON THE LEFT DOWN THE THING THAT LOOKS LIKE A V I BELIEVE STANDS FOR {SL} OR I THINK IT MIGHT BE AND {SL} I THINK IT'S OR AND THE UPSIDE-DOWN V IS AND {SL} AND THEN THE ARROW MEANS {SL} THE FIRST THING IMPLIES THE SECOND THING SO FOR THE FIRST THING L OF X IMPLIES P OF X OR L OF X {SL} UM I THINK IF L OF X THEN P OF X IS THE WAY THAT YOU PUT IT IN {SL} NON {SL} MATHEMATICAL SPEAK {SL} OK {SL} AND USING THE EXPRESSIONS ON THE RIGHT CREATE LEAST AT LEAST ONE EXAMPLE UM AND YOU CAN DEFINE THE VARIABLES HOWEVER YOU WANT UH IS THAT ONE EXAMPLE OF EACH OR JUST ONE EXAMPLE UM JUST ONE EXAMPLE OF ANY ALRIGHT UM {SL} WELL THE LAST ONE WOULD BE THERE'S SOME X AND ALL Y SUCH THAT E OF X AND Y WHICH COULD BE PUT IN OTHER TERMS AS UH IF X IS {SL} UM {SL} UH {SL} CATS THAT LIKE DOG FOOD AND Y IS DOGS THAT LIKE DOG FOOD AND E IS SUCH LIKES DOG FOOD THAT WOULD MEAN THAT THERE ARE SOME CATS THAT LIKE DOG FOOD AND ALL DOGS LIKE DOG FOOD {SL} OK {SL} ON A WEBSITE THIS WOULD PRODUCE WHAT DOES EXAMPLE A B AND C LOOK LIKE {SL} UM EXAMPLE A WOULD BE TYPED IN ARIAL WITH A BACKGROUND OF PINK AND THE TEXT ITSELF WOULD BE RED {SL} UH JUST BECAUSE IT'S IN HEADER ONE AND THAT'S HOW YOU DEFINED HEADER ONE EXAMPLE B WOULD BE ALIGNED IN THE CENTER AND IT WOULD BE BLUE TEXT {SL} UM {SL} THE FONT WOULD BE TIMES NEW ROMAN OR JUST TIMES RATHER AND THE BACKGROUND WOULD BE GREY BECAUSE THAT'S WHAT THE BODY DEFINE- ER THE {SL} YEAH THAT'S HOW THE BODY DEFINE FONT AND BACKGROUND {SL} AND EXAMPLE C WOULD BE YELLOW BACKGROUND BECAUSE THE {SL} UH I CAN'T REMEMBER THE NAME FOR IT BUT THE P OVERRIDES BODY BECAUSE IT'S BASICALLY IT'S CLOSER TO P THAN IT IS TO BODY SO IT'D BE A YELLOW BACKGROUND GREEN TEXT IN TIMES NEW ROMAN FONT {SL} OK {SL} DESCRIBE TO ME USING THE PICTURE WHAT A LOOP IS {SL} UM {SL} A LOOP WOULD BE {SL} IF YOU'RE ON THE POINT THAT HAS A VALUE OF FIVE {SL} AND YOU GO FROM FIVE TO FIVE YOU WOULD HAVE LOOPED FROM FIVE TO FIVE UM IF YOU'RE ON ONE OF THE POINTS THAT HAS A VALUE OF THREE AND YOU GO TO THE OTHER POINT THAT HAS A VALUE OF THREE YOU'RE NOT LOOPING BECAUSE THOSE ARE TWO SEPARATE VALUES BUT IF YOU GO FROM THREE TO THREE TO FIVE TO TWO TO THREE THEN YOU WOULD HAVE DONE A LOOP BECAUSE YOU WOULD HAVE GONE FROM ONE PLACE AROUND AND THEN BACK TO THE SAME PLACE {SL} OK AND HOW MANY LOOPS ARE THERE IN THIS PICTURE {SL} UM YOU COULD LOOP FROM FIVE TO FIVE YOU COULD LOOP FROM FIVE THREE TWO FIVE {SL} JUST THAT TRIANGLE YOU COULD DO THE PENTAGON WHICH IS ALL FIVE OF THOSE OR YOU COULD JUST DO THE SQUARE OF THREE THREE FIVE TWO SO {SL} I THINK FOUR LOOPS BY MY COUNT {SL} OK AND WHAT WOULD YOU CALL THE ZERO VERTEX {SL} UH {SL} I CAN'T REMEMBER THE NAME OF IT IT'S UM IT'S A VERTEX THAT'S NOT CONNECTED TO ANY OTHER VERD- UH VERTEX {SL} UM {SL} I WANNA SAY UNCONNECTED VERTEX BUT I DON'T THINK THAT'S THE NAME OF IT {SL} I I CAN'T REMEMBER THE NAME OF IT I'M GONNA HAVE TO PASS OK THAT'S OK {SL} SO DESCRIBE TO ME WHAT KIND OF INFORMATION IS HERE {SL} UM {SL} THERE'S THIS THIS IS A MENU AND IT'LL GIVE THE NAME OF AN ITEM THE PRICE OF THE ITEM A SHORT DESCRIPTION OF THE ITEM AND HOW MANY CALORIES ARE IN THE ITEM {SL} OK AND WHAT TYPE OF CODING IS THIS {SL} I THINK THIS IS H T M L CODING {SL} I I'M NOT REALLY SURE I CAN'T REMEMBER {SL} I THINK H T M L OR {SL} MAYBE UM {SL} JAVASCRIPT NOT JAVASCRIPT {SL} UM YEAH H T M L OR JAVASCRIPT I THINK I'M NOT SURE OK {SL} AND WHAT IS A BENEFIT OF CODING INFORMATION THIS WAY {SL} UM {SL} YOU HAVE A {SL} A STANDARD UM FORMULA THAT YOU CAN FOLLOW FOR EVERY ITEM SO IF YOU HAVE A HUGE MENU IT WOULDN'T BE THAT HARD TO PUT EVERYTHING INTO NAME PRICE DESCRIPTION AND HOW MANY CALORIES ARE IN EACH ITEM IN THAT MENU {SL} OK {SL} WHAT KIND OF GRAPH IS THIS {SL} UH {SL} UH I CAN'T REMEMBER THE NAME UM {SL} I THINK IT'S CALLED A CARTESIAN NO THAT'S NOT A CARTESIAN GRAPH {SL} I I CAN'T REMEMBER THE NAME OF THIS GRAPH I'M SORRY I'M GONNA HAVE TO PASS OK THAT'S OK WHAT IS THE SHORTEST PATH FROM SEVEN TO TWO {SL} UM IT WOULD BE GOING FROM SEVEN TO EIGHT TO SIX TO TWO {SL} I THINK IT'S ALSO THE ONLY PATH FROM SEVEN TO TWO {SL} OK {SL} WHAT IS A CYCLE ALSO CALLED A ROUTE OR A TOUR UM A CYCLE IS A PATH THAT STARTS FROM ONE POINT AND GOES TO EVERY OTHER POINT AND THEN ENDS UP BACK AT THE SAME POINT THAT IT STARTED UM YOU WOULDN'T BE ABLE TO HAVE A CYCLE IN THIS GRAPH BECAUSE IF YOU START OFF AT ONE THERE'S NO WAY TO GET BACK TO ONE {SL} OK AND HOW MANY CYCLES ARE IN THIS GRAPH {SL} UM I BELIEVE THE ANSWER IS ZERO OK {SL} THIS IS A LIST OF SOME BIG-O NOTATIONS FOR ALGORITHM COMPLEXITY GIVING NAMES AND EXAMPLES WHERE YOU CAN DESCRIBE TO ME THE DIFFERENCES BETWEEN THE DIFFERENT COMPLEXITIES {SL} UM THE FIRST ONE {SL} IS MOST SIMPLE COMPLEXITY IT'S BASICALLY JUST RUNNING A SINGLE FORMULA LIKE ASKING WHAT'S THE VALUE OF THREE PLUS FOUR UM {SL} THE SECOND ONE IS LOOPING {SL} N FACTORIAL TIMES I BELIEVE {SL} SO {SL} THAT WOULD BE LIKE A RECURSIVE FUNCTION ER A FUNCTION WITH TWO RECURSIVE CALLS IN IT I THINK {SL} NO ACTUALLY THAT WOULDN'T BE THAT WOULD BE {SL} HM {SL} THINK THAT WOULD BE A FUNCTION THAT CALLS ITSELF RECURSIVELY A NUMBER OF TIMES {SL} EQUAL TO HOW MANY TIMES IT'S BEEN CALLED ALREADY {SL} OR RATHER THE OPPOSITE HOW MANY TIMES IT HASN'T BEEN CALLED MINUS SOME NUMBER SAY N UM THE SECOND ONE JUST LOOPS N TIMES FOR HOWEVER MANY THINGS YOU PUT IN SO IT COULD BE LIKE ONE PLUS TWO PLUS THREE PLUS FOUR AND IT WOULD KEEP REPEATING THAT N TIMES {SL} UM {SL} THE THIRD ONE ER THE FOURTH ONE RATHER IS {SL} I BELIEVE THAT'S A SEARCH OF {SL} UH QUICK SORT ER NOT SEARCH UH SORT QUICK SORT OR SOME OTHER KIND OF SORT THAT {SL} DOESN'T GO THROUGH IT {SL} ENTIRELY N TIMES BUT IT DOESN'T ACTUALLY GO THROUGH IT JUST ONE TIME IT {SL} BREAKS IT UP INTO {SL} SOME NUMBER OF SORTABLE THINGS AND SORTS EACH ONE OF THOSE INSTEAD OF HAVING TO SORT THE ENTIRE THING ITSELF {SL} UM THE LAST ONE IS A FUNCTION THAT JUST I BELIEVE THAT WOULD BE A FUNCTION THAT CALLS ITSELF RECURSIVELY TWICE {SL} SO IF YOU WERE TO RUN THE FUNCTION FOUR TIMES IT WOULD CALL ITSELF RECURSIVELY TWICE AND THEN RECURSIVELY TWICE AGAIN IN EACH ONE OF THOSE AND THEN AGAIN IN EACH ONE OF THOSE SO IT WOULD RUN ITSELF N SQUARE TIMES {SL} OK AND WHICH TYPE OF COMPLEXITY IS BEST AND WHY {SL} UM {SL} IDEALLY IT'S BEST TO HAVE A COMPLEXITY OF BIG-O OF ONE JUST BECAUSE THEN EVERYTHING IS THE SIMPLEST THAT IT CAN POSSIBLY BE BUT BECAUSE MOST CODE CAN'T BE DONE {SL} LIKE THAT MOST CODE HAS TO BE DYNAMICALLY PROCESSED IT'S IDEAL TO EITHER HAVE A BIG-O OF LOG N OR OF N BECAUSE THOSE ARE THE {SL} LOWEST FEASIBLE VALUES THAT YOU COULD USE {SL} I GUESS {SL} OK {SL} SO WHAT IS A VERTEX AND HOW MANY VERTICES ARE THERE {SL} A VERTEX IS {SL} A SINGLE POINT {SL} AND A VERTICE IS {SL} IT DOESN'T HAVE TO BE A LINE BUT IT'S BASICALLY THE THE THING THAT CONNECTS TWO VERTEXES SO YOU SAID HOW MANY VERTICES ARE THERE MHM UM FOUR EIGHT TWELVE VERTICES {SL} CONNECTING THE EIGHT DIFFERENT VERTEXES {SL} OK WHAT IS AN EDGE AND HOW MANY EDGES ARE THERE {SL} OH {LG} I I CONFUSED VERTICE AND EDGE AN EDGE IS WHAT CONNECTS THE VERTEX AND THERE'S TWELVE EDGES AND EIGHT VERTEXES {SL} OK HOW LONG IS THE SHORTEST PATH FROM ONE TO SIX {SL} UM {SL} IF YOU INCLUDE THE POINT SIX IN IT IT WOULD BE NINE YOU'D GO FROM ONE TO TWO TO SIX OTHERWISE IT WOULD JUST BE THREE FROM ONE TO TWO TO SIX {SL} OK {SL} AND WHAT DOES IT MEAN TO SAY THAT THREE AND TWO ARE ADJACENT {SL} UM IF YOU WERE ON THE POINT EITHER THREE OR TWO YOU COULD TRAVEL TO THE OTHER ONE ADJACENT MEANS YOU CAN GO FROM ONE TO THE OTHER {SL} OK {SL} ALRIGHT SO WE ARE ALMOST DONE WE JUST NEED TO CALIBRATE THE EYE TRACKER GLASSES ONE MORE TIME ALRIGHT {SL} ALRIGHT SO YOU ARE ALL DONE UM YOU CAN GO AHEAD AND TAKE OFF THE EYE TRACKER AND WE JUST NEED TO HAVE YOU FILL OUT A QUICK SURVEY