WE'LL GET STARTED HERE YEAH WE'RE GOOD COOL THEN THE NEXT SECTION IS VERY SIMILAR TO WHAT WE JUST DID EXCEPT THIS TIME WE'LL BE TALKING ABOUT SOME BASIC MATH AND PROGRAMMING CONCEPTS INSTEAD MHM OK SO FOR THESE QUESTIONS PLEASE ASSUME THAT I DON'T KNOW ANYTHING ABOUT THESE MATHEMATICAL THEORIES MMK SO PLEASE EXPLAIN THE QUESTION AND ANSWER- AND ANSWER IT LIKE YOU'RE TUTORING ME MMK UM AND AGAIN IF YOU'RE NOT SURE WHAT THE ANSWER IS JUST TRY TO GUESS AND IF YOU HAVE ABSOLUTELY NO IDEA WHAT THE ANSWER IS WE CAN SKIP THE QUESTION OK OK YEP EXCELLENT THEN WE ARE GOING TO OF COURSE CALIBRATE THE EYE TRACKER UM REAL QUICK HERE {SL} OK ON THE LEFT ARE EXPRESSIONS AND ON THE RIGHT ARE SETS MHM SO ON THE LEFT WHAT DO THE U UPSIDE-DOWN U AND X SYMBOLS MEAN THE U UH MEANS UNION AND SO THAT IS UM THE COMBINATION OF UH THOSE TWO SETS INVOLVED SO A U B UM WOULD MEAN A SINGLE SET INCLUDING EVERY ELEMENT IN BOTH OF THE SETS A AND B UM {SL} AND THE UH UPSIDE-DOWN U IS UM THE UH {SL} THE UH WHAT IS IT THE DI- I BELIEVE IT'S THE UH I THINK IT'S CALLED THE DISECTION I {LS} CAN'T REMEMBER EXACTLY THE TERM UM BUT BASICALLY IT'S UH {SL} IT'S UH ALL THE TERMS THAT UM THAT AREN'T THAT UH IT'S UH {SL} {CG} IT'S THE ELEMENTS THAT THAT AREN'T IN BOTH B AND C UM OH WAIT NO YOU KNOW WHAT THAT'S THAT'S THE INTERSECTION UM AND SO IT'S IT'S ALL THE ELEMENTS THAT ARE IN BOTH B AND C {SL} SO FOR INSTANCE B UPSIDE-DOWN C ER B INTERSECT C UM WOULD INCLUDE UM SIX SEVEN AND EIGHT {SL} OK {SL} ALRIGHT UM SO GIVEN THE SETS ON THE RIGHT WHAT SETS WOULD BE THE ANSWER TO THE EXPRESSIONS ON THE LEFT {SL} OH WAIT COULD YOU REPEAT THAT YEAH YEAH SO GIVEN THE SETS THAT ARE ON THE RIGHT THERE WHAT SETS WOULD BE THE ANSWER TO THE EXPRESSIONS ON THE LEFT {SL} OK UM {SL} OK SO YOU MEAN OK SO A U B WOULD WOULD INCLUDE UH ONE TWO THREE FOUR FIVE SIX SEVEN AND EIGHT MHM B INTERSECT C UM WOULD BE UH SIX SEVEN AND EIGHT UH A INTERSECT C WOULD BE UH THE EMPTY SET MEANING THERE'S NO ELEMENTS UM IN THE SET OK UM {SL} I DON'T UH I DON'T HONESTLY REMEMBER UH WHAT THAT THE X THE X REPRESENTS UM {SL} FOR A SET OPERATION OK ALRIGHT {SL} NEXT ONE {SL} WHAT IS THE ROOT NODE HERE {SL} UM FIFTY {SL} OK WHAT IS THE PARENT NODE OF NINETEEN UH TWENTY THREE {SL} OK WHAT ARE THE CHILD NODES OF SEVENTY TWO {SL} UM THE TWO CHILD NODES OF SEVENTY TWO ARE FIFTY FOUR AND SEVENTY SIX UM BUT DEPENDING ON LIKE KIND OF WHAT LEVEL YOU'RE TALKING ABOUT IT COULD ALSO BE CON- SIXTY SEVEN COULD ALSO BE CONSIDERED A CHILD NODE OF SEVENTY TWO OK AND WHAT ARE THE SIBLING NODES OF TWELVE UM {SL} TWENTY THREE {SL} I THINK JUST TWENTY THREE IS WHAT YOU'D CONSIDER A A SIBLING NODE JUST BECAUSE UH ITS DIRECT PARENT IS SEVENTEEN UM BOTH OF BOTH OF THEIR PARENTS IS IS SEVENTEEN THEY'RE BOTH CHILDREN OF SEVENTEEN OK {SL} ALRIGHT {SL} WHAT SPECIAL TYPE OF FUNCTION IS THIS {SL} UM {SL} WHAT'S LIKE WHAT SPECIAL TYPE MHM {SL} UM {SL} I'M NOT REALLY SU- I'M NOT REALLY SURE WHAT YOU MEAN BY SPECIAL TYPE UM BUT IT'S IT'S A GREATEST COMMON DENOMINATOR FUNCTION THAT TAKES TWO INTEGERS AND UM RETURNS THE GREATEST COMMON DENOMINATOR OH IT'S A RECURSIVE FUNCTION BECAUSE AS YOU CAN SEE IT SAYS RETURN G C D UH Y X X MODULUS Y UM AND THAT'S A CALL TO THE SAME FUNCTION UM {SL} AND AND THAT'S KNOWN AS RECURSION UM AND SO YEAH OK SO THAT'S OK ALRIGHT AND WHAT DOES THIS FUNCTION DO {SL} IT TAKES UH TWO INTEGERS AND RETURNS THE UH {SL} THE UH GREATEST COMMON DENOMINATOR OF THOSE TWO INTEGERS OK ALRIGHT {SL} WHAT DOES THIS FUNCTION DO {SL} LET ME JUST LOOK AT IT FOR A SEC SURE {SL} IT SEEMS TO BE UM SORTING {SL} UM {SL} SORTING ELEMENTS IN A LIST UM A IS A LIST OF UH {SL} OF OF UH IT DOESN'T REALLY MATTER I GUESS OF ELEMENTS UM AND THEN {SL} AND THEN IF UH YOU YOU HAVE YOU HAVE A A UH A LOOP UM THAT REPLACES UM {SL} REPLACES ELEMENTS IN THE LIST IF IF THEY'RE IN THE WRONG ORDERING SO YOU SEE THAT IF IF A UH I MINUS ONE IS GREATER THAN A OF UH I {SL} THEN UH SWAP THE TWO ELEMENTS AS THEY'RE IN THE WRONG ORDER UM AND SO IT JUST GOES THROUGH AND AND UH GETS EVERYTHING IN TO IS THAT DESCENDING OR ASCENDING ORDER UM {SL} IT GETS EVERYTHING IN ASCENDING ORDER {SL} OK AND WHAT IS THE FORMAL NAME FOR THIS TYPE OF FUNCTION {SL} UM {SL} THE FORMAL NAME I MEAN IT'S IT'S A SORT UM {SL} I DON'T I DON'T KNOW THE FOR- THE FORMAL NAME OK I GUESS OK THAT'S ALRIGHT {SL} SO FIRST EXPLAIN EACH OF THE SYMBOLS ON THE LEFT UM THE UPSIDE-DOWN A UH MEANS UH FOR ALL UM AND SO IF IF YOU WERE TO LOOK ON THE THE RIGHT SIDE UM YOU SEE UH THAT THE UPSIDE-DOWN A AS WELL AS AN X RIGHT NEXT TO IT AND SO THAT MEANS FOR ALL X UM IT'S CALLED THE UNIVERSAL UH QUANTIFIER UM AND SO SO BASICALLY FOR UH THAT WOULD MEAN FOR ALL X UM AND THEN WHATEVER FOLLOWS IT MEANS THAT'S TRUE UM SO YOU SEE THAT THERE THERE'S AN EXPRESSION UM IN THAT THAT FUNCTION TO THE RIGHT WITH WITH WITH THE UNIVERSAL QUANTIFIER UM AND AND SO IF IF IT SAYS FOR ALL X AND THEN FOLLOWS IS AN EXPRESSION THEN THAT EXPRESSION IS TRUE FOR ALL X FOR ALL VALU- FOR ALL POSSIBLE VALUES OF X UM AND THEN YOU HAVE UH THE BACKWARDS E AND THAT'S CALLED THE UH EXISTENTIAL UH QUANTIFIER AND THAT MEANS THAT BASICALLY LIKE IT'S USED IN THE SAME WAY AS THE UNIVERSAL QUANTIFIER BUT IT MEANS UH FOR SOME VALUE OF X LIKE THERE THERE EXISTS ONE AT LEAST ONE VALUE OF X SUCH THAT THE FOLLOWING EXPRESSION IS UH IS TRUE {SL} UM THE THE V IS UH OR UM AND SO THAT MEANS UM AN EX- LIKE AND EXPRESSION WITH WITH OR BEING USED WOULD INDICATE {SL} ONLY THAT UH OK SO SO IF YOU LOOK IN IN THE UH IN THE RIGHT HAND COLUMN YOU SEE UM ONE OF THE EXPRESSIONS SAYS C OF X UH OR U OF X UM SO IN ORDER FOR THAT WHOLE EXPRESSION TO BE TRUE UH ONLY ONE ONLY ONE OF ONE OF THOSE UH EX- ONE OF THOSE UH TERMS IN THE EXPRESSION NEEDS TO BE TRUE SO EITHER C OF X NEEDS TO BE TRUE OR U OF X NEEDS TO BE TRUE AND THEN THE WHOLE EXPRESSION WOULD BE TRUE UM IN CONTRAST THE UH UPS- UPSIDE-DOWN V IS AN AND SYMBOL AND SO THAT MEANS {SL} UM {CG} IN ORDER FOR AN EXPRESSION TO BE TRUE UH ASSUMING THERE'S TWO THERE'S TWO EXPRESS- THERE'S TWO TERMS IN THE EXPRESSION SO JUST LIKE THERE IS IN THE RIGHT COLUMN UM WITH WITH R OF X AND L OF X UM {SL} ON- UH BOTH OF THEM NEED TO BE TRUE FOR THE WHOLE EXPRESSION TO BE TRUE UM AND THEN THE ARROW UH IS MEANS IMPLIES UM AND SO THAT MEANS BASICALLY IF UM {SL} IF IF THE THE TERM BEFORE THAT SYMBOL IS TRUE THEN THE UH SYMBOL AFTER IT IS TRUE SO IN THE IN THE EXPRESSION IN THE RIGHT C- UH IN THE RIGHT COLUMN L OF X IMPLIES P OF X UM {SL} THAT MEANS IF L OF X IS TRUE UM AND P OF X IS TRUE THEN IT WOULD RETURN TRUE ER I MEAN THEN THE WHOLE EXPRESSION WOULD BE TRUE HOWEVER UM IF L OF X IS UH {SL} IF L OF X IS TRUE AND P OF X IS FALSE THEN THEN THE WHOLE EXPRESSION WOULD RETURN FALSE UM SO BASICALLY {SL} BASICALLY WHAT IT DOES IS IT MEANS IF IF THE FIRST EXPRESSION IS FALSE THEN UM ER IF THE FIRST EXPRESSION IS TRUE THEN THE OTHER ONE HAS TO BE TRUE BUT EVERYTHING ELSE IS ON THE TABLE IT CAN BE ANYTHING ELSE {SL} OK ALRIGHT AND THEN USING THE EXPRESSIONS ON THE RIGHT CREATE AT LEAST ONE EXAMPLE SO YOU CAN DEFINE THE VARIABLES HOWEVER YOU WANT {SL} OK ALRIGHT UM {SL} OK SO LET'S SEE {SL} UM LET'S SAY {SL} UH C OF X IS UM {SL} LET'S SAY C OF X MEANS THAT UH {SL} SOMEONE IS {SL} IS UH THAT C OF OK SO LET'S SAY X X IS UH ALL PEOPL- X IS UH A PERSON IN THE UNIVERSE UM LIKE A HUMAN BEING UH C OF X IMPLIES THAT SOMEONE IS BELOW THE AGE OF FIFTY UM {SL} U OF X IMPLIES THAT SOMEONE IS EITHER FIFTY OR OR ABOVE THAT AGE UM AND SO THEN FOR ALL PEOPLE IN THE UNIVERSE UM {SL} FOR YEAH FOR ALL FOR EVERY PERSON IN THE UNIVERSE THAT PERSON IS EITHER BELOW FIFTY YEARS OLD OR GREATER THAN OR EQUAL TO FIFTY YEARS OLD {SL} OK ALRIGHT {SL} SO ON A WEBSITE THAT THIS WOULD PRODUCE WHAT DOES EXAMPLE A B AND C LOOK LIKE {SL} EXAMPLE A B AND C MHM {SL} OH OH OK UM THOSE ARE UH WELL EXAMPLE A IS A UH IS A HEADER UM AND SO THE TEXT WOULD BE A LITTLE BIT BIGGER UM IT WOULD BE IT WOULD STAND OUT MORE UM TO THE EYE AND WOULD GROUP WOULD GROUP OTHER UH {SL} OTHER UH OTHER OTHER UH TAGS UM AND THEN YOU CAN SEE THAT THE THE FORMATTING IS IS CHANGED UP IN THE UH FIRST SECTION SO H ONE UH IT'S ARIAL UM IT'S PINK ER THE BACKGROUND COLOR'S PINK AND THE ACTUAL COLOR OF THE TEXT IS RED FOR H TWO IT'S THE SAME THING IT'S A HEADING UM UH WE WE SEE THAT THAT THE TEXT ALIGN IS CHANGED TO UM CENTER RATHER THAN LEFT LEFT ALIGN WHICH IT IS UH BY DEFAULT UM AND THEN THE COLOR IS BLUE {SL} AND THE BACKGROUND COLOR WOULD STILL BE WHITE WHICH IS THE DEFAULT {SL} UM {SL} AND THEN EXAMPLE C UM IT'S IN A IT'S IN A UH PARAGRAPH UM TAG {SL} UM AND AND THE STYLE THAT WE'VE SET UP UH THE C S S STYLE WE'VE SET UP FOR PARAGRAPHS UP IN THE FIRST SECTION UM {SL} IS THAT THE BACKGROUND COLOR IS YELLOW AND THEN THE COLOR OF THE TEXT IS GREEN UM AND THE PARAGRAPH TEXT SHOULD SHOULD BE UM OF A SMALLER FONT THAN THE TWO HEADINGS EXAMPLE A AND B {SL} OK {SL} UM DESCRIBE TO ME USING THE PICTURE WHAT A LOOP IS {SL} WHAT A LOOP IS UM A LOOP IN PROGRAMMING OR {SL} IN THIS PICTURE OK UM WELL IT WOULD JUST MEAN YOU'D BE ABLE TO GET FROM ONE NODE UH BACK TO THE SAME NODE USING USING A LOOP UM OR YEAH WITHOUT WITHOUT ANY OTHER UM WITHOUT ANY OTHER INTERMEDIARY NODES UM AND SO LIKE SO SO THIS IS A GRAPH IT'S MADE OUT OF NODES AND EDGES UM THERE'S ONE LOOP ON THIS ON THIS GRAPH BECAUSE YOU SEE THAT UH YOU CAN GET FROM FROM FIVE BACK TO FIVE WITHOUT ANY INTER- INTERMEDIARY UH NODES UM YOU COULD GET FROM {SL} THE UH GET FROM ONE BACK TO ONE UH IF YOU WANTED BUT YOU'D HAVE TO GO TO BA- GO TO THREE FIRST AND THEN BACK TO ONE UM AND SO THAT WOULD BE A LOOP {SL} OK HOW MANY LOOPS ARE THERE IN THIS PICTURE {SL} UM ONE OK AND WHAT WOULD CALL THE ZERO VERTEX {SL} UM THAT'S AN UH UNCONNECTED COMPONENT OF THE GRAPH {SL} OK {SL} UM DESCRIBE WHAT KIND OF INFORMATION IS HERE {SL} UM {SL} SO IT'S A MENU UM WITH EACH FOOD TAG REPRESENTING A DIFFERENT ITEM ON THE MENU UM {SL} UH WHERE EACH EACH EACH ITEM ON THE MENU HAS A NAME UH A PRICE AND A DESCRIPTION UM SO IT'S INTERESTING THAT THIS IS KEPT IN IN TAGS BUT IT IT SEEMS TO BE PRETTY OBJECT ORIENTED UM WHERE EACH OBJECT IS IS IS AN ITEM OF FOOD UM IT ALSO KEEPS CALORIES I GUESS UM AND SO YOU CAN YOU COULD JUST KEEP KEEP MAKING ADDING MORE UM FOOD TAGS UM EACH OF THE UH EACH OF THE N- THE UH NAME PRICE DESCRIPTION ALL THOSE TAGS THAT ARE INSIDE THE FOOD TAGS YOU COULD SAY THAT THEY BELONG UM TO TO THAT TO THAT FOOD TAG UM {SL} YEAH OK WHAT TYPE OF CODING IS THIS {SL} UM OBJECT ORIENTED CODING OK AND WHAT IS A BENEFIT OF CODING INFORMATION THIS WAY UM {SL} IT HELPS TO UH {SL} IT HELPS TO TO ACCESS UM {SL} SPECIFIC UM {SL} IT HELPS HELPS WITH SEPARATION OF INFORMATION BASICALLY UM CAUSE YOU HAVE YOU HAVE EACH FOOD OBJECT HAS HAS UM ALL OF THEIR ALL OF ITS INFORMATION UH ENCAPSULATED UM INSIDE OF IT UM {SL} {CG} {SL} YEAH OK ALRIGHT {SL} {NS} {SL} WHAT KIND OF GRAPH IS THIS UH THIS IS A UNWEIGHTED C- UH CONNECTED UM DIRECTED GRAPH {SL} OK WHAT IS THE SHORTEST PATH FROM SEVEN TO TWO {SL} LET'S SEE UM {SL} WELL SEEING AS THE EDGES DON'T HAVE ANY WEIGHTS UM IT WOULD JUST BE THE SHORTEST AMOUNT OF EDGES I SUPPOSE UM {SL} AND SO IT WOULD JUST BE UM FROM SEVEN TO EIGHT TO SIX {SL} UH TO {SL} TWO YOU SAID TWO WAS THE FINAL ONE RIGHT YEAH OK THAT'S ACTUALLY IS THAT THE ONLY THAT MIGHT BE THE ONLY P- OH NOT IT'S NOT CAUSE YOU COULD ALSO DO CYCLES YEAH UH SEVEN EIGHT SIX TWO {SL} OK {SL} WHAT IS A CYCLE ALSO CALLED A ROUTE OR A TOUR {SL} UM A CYCLE IN THIS CASE WOULD BE A SERIES OF A SERIES OF UM NODES THAT WOULD GET YOU BACK TO THE SAME NODE AND SO SEVEN EIGHT SIX SEVEN UH WOULD BE A CYCLE YOU COULD JUST SINCE IT'S A C- UH DIRECTED GRAPH UM THOSE ARE IMPORTANT TO NOTE THE CYCLES UM IN UNDIRECTED GRAPHS THERE'S THERE'S CYCLES EVERYWHERE JUST BECAUSE THEY'RE UNDIRECTED BUT HERE UM THERE'S A FEW CYCLES UM NOTABLY SIX SEVEN EIGHT UM CAUSE YOU COULD JUST KEEP UH GOING IN BETWEEN THOSE NODES AND YOU WOULDN'T EVER HAVE TO STOP {SL} OK AND HOW MANY CYCLES ARE IN THIS GRAPH {SL} UM {SL} LET'S SEE SEVEN EIGHT SIX SEVEN EIGHT SIX TWO FOUR SEVEN UM {SL} HM {SL} {LS} UH {SL} THREE {SL} THREE OK {SL} ALRIGHT {SL} OK THIS IS A LIST OF SOME BIG-O NOTATIONS FOR ALGORITHM COMPLEXITY SO GIVING NAMES AND EXAMPLES WHERE YOU CAN DESCRIBE TO ME THE DIFFERENCES BETWEEN EACH OF THE DIFFERENT COMPLEXITIES OK SO UM O OF ONE BASICALLY MEANS THAT UH THE THE NUMBER OF UM THE NUMBER OF INSTRUCTIONS OR UH {SL} COMMANDS THAT THAT NEED TO BE RUN ARE INDEPENDENT OF THE AMOUNT OF ELEMENTS THAT YOU'RE THAT YOU'RE USING SO SAY YOU HAVE A LIST OF OF UM N ELEMENTS UM AND YOU'RE TRYING TO DO SOME SOME OPERATION ON THAT LIST UM WHERE YOU NEED TO WHERE YOU NEED TO DO SOMETHING TO EACH OF THOSE ELEMENTS UM OR THE LIST AS A WHOLE UM O OF ONE WOULD WOULD TAKE UH SOME CONSTANT SOME CONSTANT NUMBER OF OF ITERATIONS OR UM {SL} OR LIKE REPETITIONS OF THE SAME PROCESS UM {SL} WHEREAS UM O OF N WOULD WOULD TAKE SOME SOME PROPORTION UM OF OF REPET- REPETITIONS UM OF THE SAME PROCESS RELATIVE TO THE NUMBER OF ELEMENTS N UH IN THAT IN THAT SET OF OF DATA THAT YOU'RE TRYING TO PERFORM THE ALGORITHM ON UM {SL} I'M NOT REALLY SURE WHAT UH WHAT N EXCLA- EXCLAMATION IS N FACTORIAL I GUESS SO FACTORIAL TIME WOULD BE HORRIBLE UM {SL} I DON'T EVEN KNOW OF ANY ALGORITHMS THAT WOULD BE THAT BAD IF IF IF IT ACTUALLY IS IF THAT'S ACTUALLY WHAT IT IS BASICALLY IT WOULD MEAN IF YOU HAVE N ELEMENTS THAT YOU'RE TRYING TO PERFORM SOME ALGORITHM ON IT WOULD TAKE N FACTORIAL UH {SL} REPETITIONS OF THE SAME PROCESS IN ORDER TO FINISH IT UM {SL} YOU HAVE UM O OF LOG N IT'S THE SAME IDEA AS THE OTHER ONES UM {SL} IT'S UH THE AMOUNT OF THE UH THE UH COMPLEXITIES IS PROPORTIONAL TO THE UH THE LOG OF THE LOG BASE TWO OF N UM {SL} AND THE SAME THING FOR UH O OF N SQUARED {SL} OK AND WHICH TYPE OF COMPLEXITY IS BEST AND WHY UH CONSTANT TIME IS IS THE BEST CON- CONSTANT COMPLEXITY IS THE BEST IT'S THE FASTEST IT IT IT FINISHES IN THE LEAST AMOUNT OF TIME TAKING UP LESS LESS COMPUTER RESOURCES OK ALRIGHT {SL} WHAT IS A VERTEX AND HOW MANY VERTICES ARE THERE UM A VERTEX IS IS BASICALLY EACH OF THOSE CIRCLES THAT YOU SEE UM THAT ARE CONNECTED UM {SL} EACH OF THEM HAVING A NUMBER UM THERE'S ONE TWO THREE FOUR FIVE SIX SEVEN EIGHT OF THEM OK AND WHAT IS AN EDGE AND HOW MANY EDGES ARE THERE AN EDGE IS UM ARE THE LINES THAT CONNECT UH CONNECT THE VERTICES INDICATING YOU KNOW A CONNECTION BETWEEN THOSE TWO UH VERTICES UM AND SO {SL} THERE WOULD BE ONE TWO THREE FOUR FIVE SIX SEVEN EIGHT NINE TEN ELEVEN EDGES {SL} ER WAIT DID I COUNT INCORRECTLY NO IT LOOKS LIKE THERE'S THERE'S TWELVE THERE'S TWELVE EDGES OK HOW LONG IS THE SHORTEST PATH FROM ONE TO SIX {SL} UM WELL SEEING AS IT'S UH SEEING AS IT'S AN UNDIRECTED GRAPH ER I MEAN A UH UNWEIGHTED GRAPH UM {SL} I MEAN UH UNLESS YOU WENT BY THE ACTUAL LENGTH OF THE EDGES WHICH IS PRETTY UNCOMMON UM IT IT COULD BE EITHER ONE FIVE SIX OR ONE TWO SIX JUST BECAUSE THERE'S THERE'S TWO EDGES SO YOU COULD CONSIDER EACH EACH EDGE WITH THE SAME WEIGHT UM I MEAN IF YOU IF YOU DID FOR SOME REASON CONSIDER UM AN EDGE THAT'S THAT'S PHYSICALLY LONGER LIKE IF THE LINE'S PHYSICALLY LONGER TO BE A GREATER WEIGHT THEN THEN IT WOULD BE ONE FIVE SIX BUT LIKE I SAID THAT'S THAT'S I'VE NEVER HEARD OF THAT SO OK {SL} ALRIGHT AND WHAT DOES IT MEAN TO SAY THAT THREE AND TWO ARE ADJACENT {SL} UM THAT MEANS THAT THERE'S A DIRECT CONNECTION BETWEEN THREE AND TWO AS IN THERE'S THERE'S AN EDGE THAT GOES DIRECTLY BETWEEN THREE AND TWO {SL} OK ALRIGHT UM THEN THAT IS IT FOR THIS SECTION I'M JUST GONNA HAVE YOU UM WATCH THE EXES AGAIN SO THAT WE CAN CALIBRATE THE EYE TRACKER AND THEN YOU'LL BE JUST ABOUT FINISHED OK OK {SL} ALRIGHT SO YOU ARE ALL DONE UM YOU CAN